---
- name: Collect logs from web applications
  hosts: integ-sdsevo-web
  become: yes
  vars:
    current_date: "{{ ansible_date_time.iso8601 | regex_replace('T.*', '') }}"

  tasks:
    - name: Install sshpass if not present
      package:
        name: sshpass
        state: present

    - name: Create log collection script
      copy:
        dest: /home/abc/collect-daily-logs.sh
        content: |
          #!/bin/bash

          # Определяем переменные
          current_date=$(date +%Y-%m-%d)
          hostname=$(hostname)
          log_dirs=(
              "/home/abc/sdsevo-app/log/"
              "/home/abc/sdsevo-web/log/"
              "/home/abc/sdsmw/log/"
          )
          archive_dir="/home/abc/log_archive_$current_date"
          archive_file="/home/abc/logs_${hostname}_$current_date.tar.gz"

          # Создаем директорию для архива
          mkdir -p "$archive_dir"

          # Проходим по всем директориям и ищем лог-файлы
          for log_dir in "${log_dirs[@]}"; do
              if [[ -d "$log_dir" ]]; then
                  # Находим лог-файлы, созданные сегодня
                  find "$log_dir" -name "*.log" -type f -newermt "$current_date" -exec cp {} "$archive_dir/" \;
              else
                  echo "Directory $log_dir does not exist, skipping."
              fi
          done

          # Создаем архив с лог-файлами
          if [[ "$(ls -A $archive_dir)" ]]; then
              tar -czf "$archive_file" -C "$archive_dir" .
              echo "Archive created: $archive_file"
          else
              echo "No log files found for today. No archive created."
          fi

          # Удаляем временную директорию
          rm -rf "$archive_dir"

    - name: Ensure the log collection script is executable
      file:
        path: /home/abc/collect-daily-logs.sh
        mode: '0755'

    - name: Get the hostname of the host
      command: hostname
      register: host_name

    - name: Run log collection script
      command: /home/abc/collect-daily-logs.sh
      register: log_collection
      ignore_errors: yes

    - name: Show log collection result
      debug:
        msg: "{{ log_collection.stdout_lines }}"
      when: log_collection.rc == 0

    - name: Check if log file exists
      stat:
        path: "/home/abc/logs_{{ host_name.stdout }}_{{ current_date }}.tar.gz"
      register: log_file

    - name: Show log file check result
      debug:
        msg: "Log file exists: {{ log_file.stat.exists }} for host: {{ host_name.stdout }}"

    - name: Copy logs to central server
      command: >
        sshpass -p "{{ (lookup('file', '/etc/ansible/secret.yml') | from_yaml).totalvideo_pwd }}" scp
        /home/abc/logs_{{ host_name.stdout }}_{{ current_date }}.tar.gz
        root@192.168.20.102:/var/www/html/nextcloud/data/admin/files/Other/Logs_INTEG_WEB_APP/
      register: copy_result
      ignore_errors: yes

- name: Run tasks directly on a specified host
  hosts: localhost
  tasks:
    - name: Set correct permissions for the uploaded logs
      command: >
        sshpass -p "{{ (lookup('file', '/etc/ansible/secret.yml') | from_yaml).totalvideo_pwd }}" ssh root@192.168.20.102
        'sudo chown -R www-data:www-data /var/www/html/nextcloud/data/admin/files/Other/Logs_INTEG_WEB_APP/'
      ignore_errors: yes

    - name: Rescan Nextcloud files to include the new logs
      command: >
        sshpass -p "{{ (lookup('file', '/etc/ansible/secret.yml') | from_yaml).totalvideo_pwd }}" ssh root@192.168.20.102
        'sudo -u www-data php /var/www/html/nextcloud/occ files:scan --path="admin/files/Other/Logs_INTEG_WEB_APP/"'
      ignore_errors: yes

